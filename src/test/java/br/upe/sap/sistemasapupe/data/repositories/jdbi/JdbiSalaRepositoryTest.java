package br.upe.sap.sistemasapupe.data.repositories.jdbi;

import br.upe.sap.sistemasapupe.configuration.DataSourceTestConfiguration;
import br.upe.sap.sistemasapupe.data.model.atividades.Sala;
import br.upe.sap.sistemasapupe.data.model.enums.TipoSala;
import org.jdbi.v3.core.Jdbi;
import org.junit.jupiter.api.AfterEach;
import org.junit.jupiter.api.DisplayName;
import org.junit.jupiter.api.Test;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.boot.test.autoconfigure.jdbc.AutoConfigureTestDatabase;
import org.springframework.boot.test.autoconfigure.jdbc.JdbcTest;
import org.springframework.test.context.ContextConfiguration;

import static org.junit.jupiter.api.Assertions.assertEquals;
import static org.junit.jupiter.api.Assertions.assertNotNull;

@JdbcTest
@ContextConfiguration(classes = {DataSourceTestConfiguration.class})
@AutoConfigureTestDatabase(replace = AutoConfigureTestDatabase.Replace.NONE)
public class JdbiSalaRepositoryTest {

    @Autowired
    Jdbi jdbi;

    @Autowired
    JdbiSalaRepository repository;

    @AfterEach
    public void truncateTables() {
        jdbi.withHandle(handle -> handle.execute("TRUNCATE TABLE salas CASCADE "));
    }

    @Test
    @DisplayName("Dado uma sala, quando criar, então retorne com as chaves auto-generadas")
    public void givenSala_whenCreate_thenReturnSalaWithAutoGeneratedKeys() {
        Sala sala = Sala.salaBuilder().tipoSala(TipoSala.INDIVIDUAL).nome("salinha").build();

        Sala createdSala = repository.create(sala);

        assertNotNull(createdSala, "Retorno nulo");
        assertIdsAreNotNull(createdSala);
        assertEqualsWithoutIds(createdSala, sala);
    }

    private void assertIdsAreNotNull(Sala sala) {
        assertNotNull(sala.getId(), "ID da sala não deve ser nulo");
        assertNotNull(sala.getUid(), "Uid da sala não deve ser nulo");
    }

    private void assertEqualsWithoutIds(Sala expected, Sala actual) {
        assertEquals(expected.getTipoSala(), actual.getTipoSala(), "Tipo sala não coincide");
        assertEquals(expected.getNome(), actual.getNome(), "Nome não coincide");
    }

}
